- name: create an empty file for Kubeadm configuring
  copy:
    content: ""
    dest: /etc/kubernetes/kubeadm-config.yaml
    force: no

- name: configuring the container runtime including its cgroup driver
  blockinfile:
    path: /etc/kubernetes/kubeadm-config.yaml
    block: |
          kind: ClusterConfiguration
          apiVersion: kubeadm.k8s.io/v1beta3
          networking:
            podSubnet: "10.244.0.0/16"
          ---
          kind: KubeletConfiguration
          apiVersion: kubelet.config.k8s.io/v1beta1
          runtimeRequestTimeout: "15m"
          cgroupDriver: "systemd"
          systemReserved:
            cpu: 100m
            memory: 350M
          kubeReserved:
            cpu: 100m
            memory: 50M
          enforceNodeAllocatable:
          - pods

- name: initialize the cluster (this could take some time)
  shell: |
    kubeadm init --control-plane-endpoint "{{ hostvars[inventory_hostname]['KubeAPI-lb'] | default('MASTER_NODE_IP') }}" --pod-network-cidr="10.244.0.0/16" --upload-certs

- name: create .kube directory
  become: yes
  file:
    path: $HOME/.kube
    state: directory
    mode: 0755

- name: copy admin.conf to user's kube config
  become: yes
  copy:
    src: /etc/kubernetes/admin.conf
    dest: ~/.kube/config
    remote_src: yes
  
- name: install Cilium CLI
  become: yes
  become_user: root
  shell: |
    CILIUM_CLI_VERSION=$(curl -s https://raw.githubusercontent.com/cilium/cilium-cli/main/stable.txt)
    CLI_ARCH=amd64
    if [ "$(uname -m)" = "aarch64" ]; then CLI_ARCH=arm64; fi
    curl -L --fail --remote-name-all https://github.com/cilium/cilium-cli/releases/download/${CILIUM_CLI_VERSION}/cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}
    sha256sum --check cilium-linux-${CLI_ARCH}.tar.gz.sha256sum
    sudo tar xzvfC cilium-linux-${CLI_ARCH}.tar.gz /usr/local/bin
    rm cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}

- name: Deploy Cilium CNI
  become: yes
  become_user: root
  shell: |
    cilium install --version 1.15.1

- name: Secrets for hetzner-manager
  become: yes
  become_user: root
  shell: kubectl -n kube-system create secret generic hcloud --from-literal=token=HCLOUD_API_TOKEN --from-literal=network=NETWORK_ID_OR_NAME

- name: Deploy Hetzner CSI
  become: yes
  become_user: root
  shell: kubectl apply -f https://raw.githubusercontent.com/hetznercloud/csi-driver/v2.5.1/deploy/kubernetes/hcloud-csi.yml

- name: Deploy Hetzner-cloud-control-manager
  become: yes
  become_user: root
  shell: kubectl apply -f https://github.com/hetznercloud/hcloud-cloud-controller-manager/releases/latest/download/ccm.yaml
