name: Provision Infrastructure

on:
  workflow_dispatch:  # Manually trigger the workflow
    inputs:
      enviroment:
        description: 'Choose enviroment from terraform/<enviroment>'
        required: true
        default: 'production'

jobs:
  Provision-Infrastructure:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: 3bit/setup-hcloud@v2

      - name: Install Terraform
        run: |
          if ! command -v terraform &> /dev/null; then
            curl -fsSL https://releases.hashicorp.com/terraform/0.15.5/terraform_0.15.5_linux_amd64.zip -o terraform.zip
            unzip -o terraform.zip
            sudo mv terraform /usr/local/bin/
            rm terraform.zip
          fi

      - name: Verify installations
        run: |
          terraform --version

      - name: Configure Terraform variables
        working-directory: ./terraform/${{ github.event.inputs.enviroment }}
        id: vars
        run: |-
          sed -i 's/MINIO_ACCESS_KEY/${{ secrets.MINIO_ACCESS_KEY }}/' config.tf
          sed -i 's/MINIO_SECRET_KEY/${{ secrets.MINIO_SECRET_KEY }}/' config.tf 

      - name: Terraform initialization
        working-directory: ./terraform/${{ github.event.inputs.enviroment }}
        run: terraform init

      - name: Terraform Plan
        working-directory: ./terraform/${{ github.event.inputs.enviroment }}
        env:
          HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}
        run: |
          cat > variables.tfvars <<EOF
          hcloud_token = "${{ secrets.HCLOUD_TOKEN }}"
          ssh_key = "${{ secrets.CHRIS_SSH_KEY }}"
          EOF
          terraform plan -var-file=variables.tfvars
      
      - name: Terraform Apply
        working-directory: ./terraform/${{ github.event.inputs.enviroment }}
        env:
          HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}
        run: terraform apply -var-file=variables.tfvars -auto-approve
          