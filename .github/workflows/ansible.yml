name: Configure Kubernetes Cluster

on:
  workflow_dispatch:  # Manually trigger the workflow
    inputs:
      enviroment:
        description: 'Choose enviroment from terraform/<enviroment>'
        required: true
        default: 'staging'

jobs:
  Configure-Cluster:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            python3 \
            python3-pip \
            curl \
            unzip

      - name: Install Ansible and Minio client
        run: pip3 install ansible minio

      - name: Verify installations
        run: ansible --version

      - name: Update Ansible's inventory file
        working-directory: ./utils/ansible
        run: python3 update_inventory.py ${{ github.event.inputs.enviroment }} ${{ secrets.MINIO_ACCESS_KEY }} ${{ secrets.MINIO_SECRET_KEY }}

      - name: Configure machine's SSH_KEY
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$PRIVATE_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

      - name: Configure Ansible masterIP
        working-directory: ./ansible
        run: |
          master_ip=$(awk '/master-1.dealer.com.cy/{getline; print $2}' ../utils/ansible/hosts.yml)
          sed -i "s/MASTER_NODE_IP/$master_ip/g" roles/common/tasks/main.yaml
          sed -i "s/MASTER_NODE_IP/$master_ip/g" roles/nfs/tasks/main.yaml

      - name: Run Ansible-scripts on targeted instances
        working-directory: ./ansible
        run: ansible-playbook -i ../utils/ansible/ansible_target.yml site.yaml

  Remove-ansible-targets:
    runs-on: ubuntu-latest
    needs: Configure-Cluster

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure Terraform tags
        working-directory: ./terraform/${{ github.event.inputs.enviroment }}
        run: |
          sed -i 's/"ansible-target" : "true"//g' hcloud.tf
          awk '/ignore_changes/,/\]/{next} 1' hcloud.tf > temp && mv temp hcloud.tf

      - name: Install Terraform
        run: |
          if ! command -v terraform &> /dev/null; then
            curl -fsSL https://releases.hashicorp.com/terraform/0.15.5/terraform_0.15.5_linux_amd64.zip -o terraform.zip
            unzip -o terraform.zip
            sudo mv terraform /usr/local/bin/
            rm terraform.zip
          fi

      - name: Verify installations
        run: |
          terraform --version

      - name: Configure Terraform variables
        working-directory: ./terraform/${{ github.event.inputs.enviroment }}
        id: vars
        run: |-
          sed -i 's/MINIO_ACCESS_KEY/${{ secrets.MINIO_ACCESS_KEY }}/' config.tf
          sed -i 's/MINIO_SECRET_KEY/${{ secrets.MINIO_SECRET_KEY }}/' config.tf 

      - name: Terraform initialization
        working-directory: ./terraform/${{ github.event.inputs.enviroment }}
        run: terraform init

      - name: Terraform Plan
        working-directory: ./terraform/${{ github.event.inputs.enviroment }}
        env:
          HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}
        run: |
          cat > variables.tfvars <<EOF
          hcloud_token = "${{ secrets.HCLOUD_TOKEN }}"
          ssh_key = "${{ secrets.CHRIS_SSH_KEY }}"
          EOF
          terraform plan -var-file=variables.tfvars

      - name: Remove Terraform's Ansible-Target Tags
        working-directory: ./terraform/${{ github.event.inputs.enviroment }}
        env:
          HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}
        run: terraform apply -var-file=variables.tfvars -auto-approve

      